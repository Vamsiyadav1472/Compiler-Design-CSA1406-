import fitz  # pymupdf
import docx
import re

# ---------- Text Extraction Functions ----------

def extract_text_from_pdf(pdf_path):
    text = ""
    doc = fitz.open(pdf_path)
    for page in doc:
        text += page.get_text()
    return text

def extract_text_from_docx(docx_path):
    doc = docx.Document(docx_path)
    return "\n".join([para.text for para in doc.paragraphs])

# ---------- Information Extraction Functions ----------

def extract_email(text):
    match = re.search(r"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}", text)
    return match.group() if match else "Not found"

def extract_phone(text):
    match = re.search(r"\+?\d[\d\s\-]{8,15}", text)
    return match.group() if match else "Not found"

def extract_name(text):
    lines = text.strip().split('\n')
    return lines[0] if lines else "Not found"

def extract_skills(text):
    keywords = ['python', 'java', 'sql', 'html', 'css', 'machine learning', 'nlp']
    return [skill for skill in keywords if skill.lower() in text.lower()]

# ---------- Main Resume Parser ----------

def parse_resume(file_path):
    if file_path.endswith(".pdf"):
        text = extract_text_from_pdf(file_path)
    elif file_path.endswith(".docx"):
        text = extract_text_from_docx(file_path)
    else:
        return "Unsupported file format"

    return {
        "Name": extract_name(text),
        "Email": extract_email(text),
        "Phone": extract_phone(text),
        "Skills": extract_skills(text)
    }

# ---------- Entry Point ----------

if __name__ == "__main__":
    file_path = "resume.pdf"  # Or "resume.docx"
    data = parse_resume(file_path)
    print("Extracted Resume Data:\n")
    for key, value in data.items():
        print(f"{key}: {value}")
